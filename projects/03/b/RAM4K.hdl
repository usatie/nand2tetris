// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in=in, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    DMux8Way(in=load, sel=address[0..2], a=al, b=bl, c=cl, d=dl, e=el, f=fl, g=gl, h=hl);
    RAM512(in=a, load=al, address=address[3..11], out=aa);
    RAM512(in=b, load=bl, address=address[3..11], out=bb);
    RAM512(in=c, load=cl, address=address[3..11], out=cc);
    RAM512(in=d, load=dl, address=address[3..11], out=dd);
    RAM512(in=e, load=el, address=address[3..11], out=ee);
    RAM512(in=f, load=fl, address=address[3..11], out=ff);
    RAM512(in=g, load=gl, address=address[3..11], out=gg);
    RAM512(in=h, load=hl, address=address[3..11], out=hh);
    Mux8Way16(a=aa, b=bb, c=cc, d=dd, e=ee, f=ff, g=gg, h=hh, sel=address[0..2], out=out);
}
